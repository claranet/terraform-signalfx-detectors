# This is a basic workflow to help you get started with Actions

name: Detectors

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      name: Skip Duplicate Actions
      uses: fkirc/skip-duplicate-actions@v3.4.0
      with:
        concurrent_skipping: 'same_content'
        do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
        paths: '["modules/**.tf", "modules/**/conf/detector-*.yaml", "scripts/**", "Makefile", ".github/workflows/main.yml"]'

  deployment:
    # The type of runner that the job will run on
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    #runs-on: hashicorp/terraform:full
    runs-on: ubuntu-latest
    container:
      image: "claranet/terraform-ci:latest"
    env:
      SFX_AUTH_TOKEN: ${{ secrets.SFX_TOKEN }}
      TF_VAR_environment: "ci-testing"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.1
        terraform_wrapper: false

    - name: Generate example stack importing all modules
      run: make init-stack
    
    - name: Terraform fmt
      run: terraform fmt -recursive -write=false -diff -check .

    - name: Terraform init
      if: env.SFX_AUTH_TOKEN != null
      run: terraform -chdir=examples/stack init

    - name: Terraform validate
      if: env.SFX_AUTH_TOKEN != null
      run: terraform -chdir=examples/stack validate

    #- name: Terraform Plan
    #  run: terraform plan -input=false -lock=false -detailed-exitcode examples/stack || if [ $? -ne 2 ]; then exit $?; fi

    - name: Enable destroy
      if: env.SFX_AUTH_TOKEN != null
      run: echo ::set-output name=enabled::1
      id: destroy

    - name: Terraform Apply
      #if: github.ref == 'refs/heads/master' && github.event_name == 'push' && ${{ always() }}
      if: env.SFX_AUTH_TOKEN != null
      run: terraform -chdir=examples/stack apply -input=false -lock=false -refresh=false -auto-approve

    - name: Terraform Destroy
      if: always() && steps.destroy.outputs.enabled == '1' && env.SFX_AUTH_TOKEN != null
      run: terraform -chdir=examples/stack destroy -input=false -lock=false -refresh=false -auto-approve

  compliance:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    container:
      image: "claranet/terraform-ci:latest"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check and lint
      run: make check-module

  outputs:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    container:
      image: "claranet/terraform-ci:latest"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate modules outputs
      run: make update-module-outputs

    - name: Check for changes
      run: git diff --exit-code

  gen:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    container:
      image: "claranet/terraform-ci:latest"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate modules detectors from preset configs
      run: make update-module-detectors

    - name: Check for changes
      run: |
        git diff --exit-code
        ! [ -n "$(git status --porcelain)" ]

