## Detector generator configuration
#
## Based on jinja2 see the official documentation:
## https://jinja.palletsprojects.com/en/2.10.x/templates/
#

## @param module - string - mandatory
## Terraform module name (last directory in path).
## Used before {{name}} for alert subject.
#
## Use "-" as separator, no spaces or underscores.
## Aims to be passed from env var by script or cli.
#
module:

## @param id - string - optional
## Detector id (shorter canonical name).
## Used as prefix for terraform variables, resources and outputs names.
#
## If not defined it will result in lower {{name}} with spaces replaced by `_`.
## This is why this is highly recommended to explicitly set {{id}} if
## {{name}} is too long or use special chars like `()`.
#
## Aims to be passed from env var by script or cli.
#
id:

## @param name - string - mandatory
## Detector entire readable name (what it checks).
## Used after {{module}} for alert subject and as prefix for variables.
#
## The name will determine the detector type to create. If equals to
## "heartbeat", it will use "not_reporting.detector()" function and add
## "max_delay=900". Else, it writes threshold detector type using
## "detect()" function. The rendered alert subject will be:
## `[{{ rules.severity }}][tfenv] {{ module }} {{ name }} (XX {{comparator}} {{threshold}) on` ..
#
## Aims to be passed from env var by script or cli.
## You should use spaces and even full sentence to describe the check.
#
name:

## @param aggregation - string/bool - optional - default: true
## Determine aggregation function added only to {{rules.severity}} with
## {{metric}} defined (not used for {{formula}}).
## If set as bool to true (the default) it declares an empty aggregation
## variable but if set as string it defines the "default" of this variable.
## If set as bool to false, it does not declare or use any variable.
#
#aggregation: ".mean(by=['host'])"
aggregation: true

## @param transformation - string - optional - defaut: true
## Determine aggregation function added only to {{rules.severity}} with
## {{metric}} defined (not used for {{formula}}).
## By default or set to true (bool), it uses an empty string variable.
## If set as bool to true (the default) it declares an empty aggregation
## variable but if set as string it defines the "default" of this variable.
## If set as bool to false, it does not declare or use any variable.
#
#transformation: ".mean(over='5m')"
transformation: true

## @param filtering - string - optional
## Determine base filtering added only to signals of type "metric" (not
## used for "formula" type).
## It will define a `base_filtering` variable at start of signalflow
## program then use it in `filter` parameter of `data()` function.
#
## Should be a valid `filter` object, see:
## https://dev.splunk.com/observability/docs/signalflow/functions/filter_function/
#
#filtering: "filter('primary_aggregation_type', 'true')"
filtering:

## @param exclude_not_running_vm - bool - optional
## In addition to base filtering from signalflow variable we have preset
## filters from a terraform local which exclude all not running vms from
## cloud providers.
## This is often useful for heartbeat detectors, especially based on
## metrics coming from the agent (to avoid false positive at downscale).
exclude_not_running_vm:

## @param value_unit - string - optional
## Signal unit for the current detector.
## This will update the detector messages and associated variables description.
value_unit:

## @param runbook_url - string - optional
## Define a default runbook_url for all rules of the detector, see:
## https://docs.signalfx.com/en/latest/detect-alert/set-up-detectors.html#runbook
## If not defined, an empty string will be used as variable to allow the
## use to set its custom one.
runbook_url:

## @param tip - string - optional
## Define a default tip for all rules of the detector, see:
## https://docs.signalfx.com/en/latest/detect-alert/set-up-detectors.html#tip
## If not defined, an empty string will be used as variable to allow the
## use to set its custom one.
tip:

## @param disabled - bool - optional
## Allows to disable all alerting rules defined in this detector
## Only works if set to `true`.
disabled:

## @param signals - object - mandatory
## List of signals of the detector. Attribute key is the {{signal_label}}
## used in signalflow programm.
## The last attribute (by convention "signal") is shown on the detector
## chart and used to define alert rules.
## Before it, optional not published  signals could be defined (by
## convention A, B, C, ..) to use them into the last "signal" as formula.
#
signals:
  ## @param {{signal_label}} - object - optional
  ## Requires to define either metric or formula attribute.
  ## In general the last "signal" is of type formula which uses previous
  ## signals of type metric.
  #
  #signal:
  signal_label:

    ## @param metric - string - optional
    ## The metric's name to use for this signal in "data()" function.
    ## Conflicts with "formula" parameter.
    #
    metric:

    ## @param formula - string - optional
    ## The signalflow formula which could use previous signals and
    ## analytics functions and methods, see:
    ## https://dev.splunk.com/observability/docs/signalflow/function_method_list
    #
    formula:

    ## @param filter - string - optional
    ## The additional filter in "data()" function (so it works for
    ## signals of type "metric" only, see:
    ## https://dev.splunk.com/observability/docs/signalflow/functions/data_function/)
    ## Note defining `filter: null` is the same that do not define it at all.
    #
    filter:

    ## @param extrapolation - string - optional
    ## The extrapolation policy to use in "data()" function (so it works for
    ## signals of type "metric" only, see:
    ## https://dev.splunk.com/observability/docs/signalflow/functions/data_function/)
    ## Note defining `extrapolation: null` is the same that do not define it at all.
    #
    extrapolation:

    ## @param rollup - string - optional
    ## The rollup policy to use in "data()" function (so it works for
    ## signals of type "metric" only, see:
    ## https://dev.splunk.com/observability/docs/signalflow/functions/data_function/)
    ## Note defining `rollup: null` is the same that do not define it at all.
    #
    rollup:

## @param rules - object - mandatory
## List of rules assigned to this detector. Attribute key is the {{severity}}.
## Every rule could define a {{dependency}} which is the key of another one.
#
rules:
  ## @param {{severity}} - object - optional
  ## The severity: https://docs.signalfx.com/en/latest/detect-alert/set-up-detectors.html#severity
  ## Used as label to publish alerts depending on the detector type like "detect()"
  ## block for "threshold" detector type.
  #
  #info:
  #warning:
  #minor:
  #major:
  #critical:
  severity:

    ## @param threshold - number - optional
    ## The threshold value for this severity alert rule used in "when()"
    ## function to create the condition.
    ## Required for "threshold" detector type" only.
    threshold:

    ## @param comparator - string - optional
    ## The comparator to use against last signal value used in "when()"
    ## function to create the condition.
    ## Should be one of ">", ">=", "<", "<=", "!=", "==".
    ## Required for "threshold" detector type" only.
    comparator:

    ## @param description - string - optional
    ## The custom description to set for this rule. If not defined, it will
    ## fill the default generic description based on threshold comparison
    ## like: "is too low < " / "is too high >" / "is !=" / "is ==".
    #description:

    ## @param dependency - string - optional
    ## Add dependency to a previously defined rule {{severity}}.
    ## This will add another condition to negate the dependecy like:
    ## when(signal > {{severity}}) and when(signal <= {{severity.dependency}})
    #dependency:

    ## @param lasting_duration - string - optional - defaut: None
    ## Minimum duration that conditions must be true 
    ## before raising alert
    #lasting_duration:

    ## @param lasting_at_least - number - option - defaut: 1.0
    ## Percentage of lasting that conditions must be true 
    ## before raising alert (>= 0.0 and <= 1.0)
    ## lasting value is mandatory to use this parameter
    #lasting_at_least:

