documentations:
  - name: Prometheus Exporter for Windows
    url: https://github.com/prometheus-community/windows_exporter

source_doc: |
  The detectors of this module uses metrics from the [windows exporter](https://github.com/prometheus-community/windows_exporter) plugin for Prometheus.

  You need to install it with at least `service` and `ad` modules by using `ENABLED_COLLECTORS=service,ad`.

  Some filters must be added into the OTEL agent configuration to avoid reaching custom metrics limitations on Splunk.

  ### Examples

  Sample OTEL Agent configuration with needed filters

  ```yaml
  ---
  extensions:
    health_check:
      endpoint: 0.0.0.0:13133
    http_forwarder:
      ingress:
        endpoint: 0.0.0.0:6060
      egress:
        endpoint: "${SPLUNK_API_URL}"
    smartagent:
      bundleDir: "${SPLUNK_BUNDLE_DIR}"
      collectd:
        configDir: "${SPLUNK_COLLECTD_DIR}"

  receivers:
    hostmetrics:
      collection_interval: 20s
      scrapers:
        cpu:
        disk:
        filesystem:
        memory:
        network:
        load:
        paging:
        processes:
    smartagent/signalfx-forwarder:
      type: signalfx-forwarder
      listenAddress: 0.0.0.0:9080
    signalfx:
      endpoint: 0.0.0.0:9943

    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:55681
    prometheus:
      config:
        scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 2m
            static_configs:
              - targets: ['0.0.0.0:8888']
            metric_relabel_configs:
              - source_labels: [__name__]
                regex: '.*grpc_io.*'
                action: drop
    prometheus/exporter:
      config:
        scrape_configs:
          - job_name: 'prometheus-exporter-ad'
            scrape_interval: 1m
            static_configs:
              - targets: ['127.0.0.1:9182']
            metric_relabel_configs:
              - source_labels: [__name__]
                regex: 'windows_ad_replication.*'
                action: keep

          - job_name: 'prometheus-exporter-services'
            scrape_interval: 1m
            static_configs:
              - targets: ['127.0.0.1:9182']
            metric_relabel_configs:
              - source_labels: [__name__,name]
                separator: "@"
                regex: 'windows_service_state@(kdc|adws|dfs|dfsr|dns|ismserv|lanmanserver|lanmanworkstation|netlogon|ntds|w32time)'
                action: keep


  processors:
    batch:
    memory_limiter:
      ballast_size_mib: ${SPLUNK_BALLAST_SIZE_MIB}
      check_interval: 2s
      limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
    resourcedetection:
      detectors: [azure, system]
      override: false
    resource/add_global_dimensions:
      attributes:
        - action: upsert
          key: sfx_monitored
          value: true
        - action: upsert
          key: env
          value: prod

  exporters:
    signalfx:
      access_token: "${SPLUNK_ACCESS_TOKEN}"
      api_url: "${SPLUNK_API_URL}"
      ingest_url: "${SPLUNK_INGEST_URL}"
      include_metrics:
        - metric_name: cpu.utilization_per_core
        - metric_name: cpu.wait
    otlp:
      endpoint: "${SPLUNK_GATEWAY_URL}:4317"
      insecure: true

  service:
    extensions: [health_check, http_forwarder]
    pipelines:
      metrics:
        receivers: [hostmetrics, otlp, prometheus, signalfx, smartagent/signalfx-forwarder, prometheus/exporter]
        processors: [memory_limiter, batch, resourcedetection, resource/add_global_dimensions]
        exporters: [signalfx]
  ...
  ```
