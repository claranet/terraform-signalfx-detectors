module: redis
name: high memory fragmentation ratio
runbook_url: "https://www.dynatrace.com/news/blog/introducing-redis-server-monitoring/#key-metrics"
tip: restart redis to recover memory previously unusable due to fragmentation or enable the new active defragmentation feature available since redis 4
aggregation: ".mean(by=['k8s.workload.name', 'k8s.namespace.name', 'k8s.cluster.name'], allow_missing=True)"

signals:
  A:
    metric: redis_memory_used_rss_bytes
    rollup: average
  B:
    metric: redis_memory_used_bytes
    rollup: average
  signal:
    formula: (A/B)

rules:
  critical:
    threshold: 5
    comparator: '>'
    lasting_duration: 15m
    lasting_at_least: 1
  major:
    threshold: 2
    comparator: '>'
    dependency: critical
    lasting_duration: 15m
    lasting_at_least: 1
