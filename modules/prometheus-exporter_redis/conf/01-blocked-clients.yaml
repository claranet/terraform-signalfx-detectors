module: redis
name: blocked over connected clients ratio
aggregation: ".sum(by=['k8s.workload.name', 'k8s.namespace.name', 'k8s.cluster.name'], allow_missing=True)"


value_unit: "%"

signals:
  A:
    metric: redis_blocked_clients
  B:
    metric: redis_connected_clients
  signal:
    formula: (A/B).scale(100)

rules:
  critical:
    threshold: 5
    comparator: '>'
    lasting_duration: 1h
    lasting_at_least: 0.5
  major:
    threshold: 0
    comparator: '>'
    lasting_duration: 1h
    lasting_at_least: 0.5
    dependency: critical
