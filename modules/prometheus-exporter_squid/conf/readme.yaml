documentations:
  - name: Squid Server
    url: http://www.squid-cache.org/
  - name: Prometheus Exporter for Squid
    url: https://github.com/boynux/squid-exporter

source_doc: |
  The detectors of this module uses metrics from the [squid exporter prometheus](https://github.com/boynux/squid-exporter).
  Check its documentation to install and configure it appropriately with your Squid server.

  ### Examples
  
  Here is a sample configuration fragment for the [OpenTelemetry Collector](https://opentelemetry.io/docs/collector/) agent using
  the [prometheusexec receiver](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/prometheusexecreceiver).

  ```yaml
  receivers:
    prometheus_exec/squid:
    exec: /etc/otel/collector/scripts/squid-exporter -listen 127.0.0.1:{{port}} -metrics-path "/metrics" -squid-hostname localhost -squid-port 3128 -extractservicetimes false
    port: 9095
    scrape_interval: 60s
  processors:
    filter/squid:
      metrics:
        include:
          match_type: regexp
          metric_names:
            - squid_server_all_.*
            - squid_client_http_.*
            - squid_up
    metricstransform/squid:
      transforms:
      - action: update
        include: squid_up
        match_type: strict
        operations:
        # Empty the `host` label set by the exporter for squid_up metric only:
        # https://github.com/boynux/squid-exporter/blob/afadec8336ae6d8208ef9085156ba3803a5b71ca/collector/metrics.go
        # It can cause conflict with the `host.name` dimension from the new OpenTelemetry convention
        - action: update_label
          label: host
          value_actions:
            # change to the host value provided for `squid-hostname` parameter
            - value: localhost
              new_value:
    resourcedetection/internal:
      detectors: [system, gce, ecs, ec2, azure]
      # Useful in combination with the prometheus receivers which set `host.name` dimension from the scrapped url but we prefer to keep the hostname where the agent runs.
      override: true
  service:
    pipelines:
      metrics/squid:
        receivers: [prometheus_exec/squid]
        processors: [resourcedetection/internal, filter/squid, metricstransform/squid]
        exporters: [signalfx]
  ```

