documentations:
  - name: Smart Agent monitor mysql
    url: 'https://docs.signalfx.com/en/latest/integrations/agent/monitors/collectd-mysql.html'
  - name: Smart Agent monitor sql
    url: 'https://docs.signalfx.com/en/latest/integrations/agent/monitors/sql.html'

source_doc: |
  Check the [integration
  documentation](https://docs.signalfx.com/en/latest/integrations/integrations-reference/integrations.mysql.html)
  in addition to the monitor one which it uses.

  ### Monitors

  The detectors in this module are based on metrics reported by the following monitors:

  * [collectd/mysql](https://docs.signalfx.com/en/latest/integrations/agent/monitors/collectd-mysql.html)
  * [sql](https://docs.signalfx.com/en/latest/integrations/agent/monitors/sql.html)

  The `collectd/mysql` requires to enable the following `extraMetrics`:

  * `threads.running`
  * `mysql_bpool_counters.reads`
  * `mysql_bpool_counters.read_requests`
  * `mysql_bpool_pages.free`
  * `mysql_bpool_pages.total`

  To collect InnoDB metrics you also have to `innodbStats: true` which is available since agent version `v5.3.3`.

  Others metrics are collected from the `sql` monitor thanks to custom queries. See examples below.

  ### MySQL

  You have to configure your MySQL database to provide a user to collect metrics.
  You can use [this terraform module](https://github.com/claranet/terraform-signalfx-integrations/tree/master/database/mysql)
  or follow instruction in [integration
  documentation](https://docs.signalfx.com/en/latest/integrations/integrations-reference/integrations.mysql.html#creating-a-mysql-user-for-collectd).

  ### Examples

  Here is a sample configuration fragment for the SignalFx agent monitors:

  ```yaml
    - type: collectd/mysql
      host: &mysqlHost localhost
      port: &mysqlPort 3306
      username: &mysqlUser {"#from": "vault:secret/my-database[username]"}
      password: &mysqlPass {"#from": "vault:secret/my-database[password]"}
      databases:
        - name: &mysqlDBName mysql
      # Uncomment only if mysql server is not on the same host as signalfx agent
      #disableHostDimensions: true
      extraDimensions: &mysqlDimensions
        # Uncomment only if you enabled `disableHostDimensions` or for "serverless" mode.
        #host: *mysqlHost
        # Always add this extraDimension.
        mysql_port: *mysqlPort
      # You should not have to change lines below
      innodbStats: true
      extraMetrics:
        - threads.running
        - mysql_bpool_counters.reads
        - mysql_bpool_counters.read_requests
        - mysql_bpool_pages.free
        - mysql_bpool_pages.total
    - type: sql
      dbDriver: mysql
      extraDimensions: *mysqlDimensions
      # This is a YAML reference to avoid duplicating the above config.
      host: *mysqlHost
      port: *mysqlPort
      params:
        host: *mysqlHost
        port: *mysqlPort
        dbname: *mysqlDBName
        username: *mysqlUser
        password: *mysqlPass
      connectionString: '{{.username}}:{{.password}}@tcp({{.host}}:{{.port}})/{{.dbname}}'
      queries:
        # Requires signalfx-agent >= v5.4.0
        - query: 'SHOW SLAVE STATUS;'
          datapointExpressions:
            - 'GAUGE("mysql_slave_sql_running", {master_uuid: Master_UUID, channel: Channel_name}, Slave_SQL_Running == "Yes" ? 1 : 0)'
            - 'GAUGE("mysql_slave_io_running", {master_uuid: Master_UUID, channel: Channel_name}, Slave_IO_Running == "Yes" ? 1 : 0)'
            - 'GAUGE("mysql_seconds_behind_master", {master_uuid: Master_UUID, channel: Channel_name}, Seconds_Behind_Master)'
        # Works for older agent versions but does not support "seconds_behind_master" metric
        #- query: "SELECT IF(VARIABLE_VALUE LIKE 'ON', 1, 0) AS slave_sql_running FROM information_schema.GLOBAL_STATUS WHERE VARIABLE_NAME LIKE 'SLAVE_RUNNING';"
        #  metrics:
        #    - metricName: "mysql_slave_sql_running"
        #      valueColumn: "slave_sql_running"
        - query: 'SHOW GLOBAL STATUS WHERE Variable_name like "Aborted_connects";'
          metrics:
            - metricName: "mysql_aborted_connects"
              valueColumn: "Value"
              isCumulative: true
        - query: 'SHOW GLOBAL STATUS WHERE Variable_name like "Queries";'
          metrics:
            - metricName: "mysql_queries"
              valueColumn: "Value"
              isCumulative: true
        - query: 'SHOW GLOBAL STATUS WHERE Variable_name like "Slow_queries";'
          metrics:
            - metricName: "mysql_slow_queries"
              valueColumn: "Value"
              isCumulative: true
        - query: 'SHOW GLOBAL STATUS WHERE Variable_name like "Threads_connected";'
          metrics:
            - metricName: "mysql_threads_connected"
              valueColumn: "Value"
        - query: 'SHOW GLOBAL VARIABLES WHERE Variable_name like "max_connections";'
          metrics:
            - metricName: "mysql_max_connections"
              valueColumn: "Value"
  ```

  __Note__: By default this configuration is for [standard
  deployment](https://github.com/claranet/terraform-signalfx-detectors/wiki/Guidance#deployment-mode).
  You have to `disableHostDimensions: true` and add your MySQL server as `host` dimension in `extraDimensions`.

notes: |
  The `mysql_threads_anomaly` detector monitors query rate change of all `mysql_commands.*` metrics but only
  `select`, `update`, `delete` and `insert` are enabled by default so feel free to more in `extraMetrics`.
